# ラベリング(詳細版) 練習用
# https://dronebiz.net/tech/opencv/labeling
import cv2
import numpy as np
import random
import sys

# 画像のパスを指定
input_image_path = '87.jpg'

# 画像をグレーで読み込み
gray_src = cv2.imread(input_image_path, 0)

# 前処理(平滑化)
# 第一引数:入力画像
# 第二引数:カーネルの縦幅と横幅(どちらも奇数)
# 第三引数:ガウシアンの標準偏差値(横方向(sigmaX)と縦方向(sigmaY)),sigmaXしか指定しない場合、sigmaXとsigmaYは同じものと見なされる,どちらも0の場合は、カーネルのサイズから自動的に計算される
blur_src = cv2.GaussianBlur(gray_src, (5, 5), 2)

# 二値変換
mono_src = cv2.threshold(blur_src, 48, 255, cv2.THRESH_BINARY_INV)[1]

# ラベリング結果書き出し用に二値画像をカラー変換
color_src01 = cv2.cvtColor(mono_src, cv2.COLOR_GRAY2BGR)
color_src02 = cv2.cvtColor(mono_src, cv2.COLOR_GRAY2BGR)

# ラベリング処理
label = cv2.connectedComponentsWithStats(mono_src)

# label[0]はラベル数
# label[1]はラベル番号が入った配列データ 例)label[1][y][x]には(x,y)座標のラベル番号が入っている
# label[2]はオブジェクト詳細の配列データ(x,y,w,h,size = label[2]で参照できる)
# ※x,y,w,h は、オブジェクトの外接矩形の左上のx座標、y座標、高さ、幅
# ※sizeは、面積(pixcel)
# label[3]はオブジェクトの中心点(x,y)

# オブジェクト情報を項目別に抽出
n = label[0] - 1
print(label[0], " オブジェクトの数:", n)
print(label[1])

# print(label[2])
# ↓
# [[     0      0    640    480 269420] ←は背景の情報
#  [   250      0     61     48   1600]
#  [   218     20      8      4     21]
#  [   437     43     36     47   1084]
#  [    79     58     87    142   7340]
#  [   565     88     41     34    760]
#  [   637    128      3     27     67]
#  [   458    145     35     46   1049]
#  [   367    154     47     48   1525]
#  [   112    224     31     32    783]
#  [   397    234    125    115   8289]
#  [   101    265     15     10     91]
#  [    38    277      5      2      7]
#  [   564    307     76    140   7620]
#  [   402    311      1      1      1]
#  [   320    335     56     57   2217]
#  [   231    344     28     27    354]
#  [   196    395     67     66   3281]
#  [   442    445     70     35   1673]
#  [   280    471      7      6     18]]
#  [     x      y      w      h   size]となっている


# print(label[3])
# ↓
# [[310.87316458 234.95487714]
#  [276.895625    22.729375  ]
#  [221.42857143  21.28571429]
#  [455.71402214  63.1402214 ]
#  [120.65381471 137.87915531]
#  [583.38026316 104.28157895]
#  [638.17910448 141.82089552]
#  [474.89609152 167.95328885]
#  [389.77180328 177.55540984]
#  [126.63729246 239.80332056]
#  [462.95017493 288.77307275]
#  [108.49450549 270.06593407]
#  [ 39.57142857 277.28571429]
#  [607.22965879 379.32624672]
#  [402.         311.        ]
#  [347.72936401 363.47902571]
#  [246.57344633 359.60169492]
#  [228.98445596 427.98994209]
#  [478.29946204 463.39569635]
#  [282.88888889 473.72222222]]
#  [           x            y]

data = np.delete(label[2], 0, 0)
center = np.delete(label[3], 0, 0)
# print(data)
# ↓
# [[ 250    0   61   48 1600]
#  [ 218   20    8    4   21]
#  [ 437   43   36   47 1084]
#  [  79   58   87  142 7340]
#  [ 565   88   41   34  760]
#  [ 637  128    3   27   67]
#  [ 458  145   35   46 1049]
#  [ 367  154   47   48 1525]
#  [ 112  224   31   32  783]
#  [ 397  234  125  115 8289]
#  [ 101  265   15   10   91]
#  [  38  277    5    2    7]
#  [ 564  307   76  140 7620]
#  [ 402  311    1    1    1]
#  [ 320  335   56   57 2217]
#  [ 231  344   28   27  354]
#  [ 196  395   67   66 3281]
#  [ 442  445   70   35 1673]
#  [ 280  471    7    6   18]]

# print(center)
# ↓
# [[276.895625    22.729375  ]
#  [221.42857143  21.28571429]
#  [455.71402214  63.1402214 ]
#  [120.65381471 137.87915531]
#  [583.38026316 104.28157895]
#  [638.17910448 141.82089552]
#  [474.89609152 167.95328885]
#  [389.77180328 177.55540984]
#  [126.63729246 239.80332056]
#  [462.95017493 288.77307275]
#  [108.49450549 270.06593407]
#  [ 39.57142857 277.28571429]
#  [607.22965879 379.32624672]
#  [402.         311.        ]
#  [347.72936401 363.47902571]
#  [246.57344633 359.60169492]
#  [228.98445596 427.98994209]
#  [478.29946204 463.39569635]
#  [282.88888889 473.72222222]]

# オブジェクト情報を利用してラベリング結果を画面に表示
for i in range(n):

    # 各オブジェクトの外接矩形を赤枠で表示
    # [ x, y, w, h, size] となっている
    x0 = data[i][0]
    y0 = data[i][1]
    x1 = data[i][0] + data[i][2]
    y1 = data[i][1] + data[i][3]
    cv2.rectangle(color_src01, (x0, y0), (x1, y1), (0, 0, 255))
    cv2.rectangle(color_src02, (x0, y0), (x1, y1), (0, 0, 255))

    # 各オブジェクトのラベル番号と面積に黄文字で表示
    cv2.putText(color_src01, "ID: " + str(i + 1), (x1 - 20, y1 + 15),
                cv2.FONT_HERSHEY_PLAIN, 1, (0, 255, 255))
    cv2.putText(color_src01, "S: " +
                str(data[i][4]), (x1 - 20, y1 + 30), cv2.FONT_HERSHEY_PLAIN, 1, (0, 255, 255))

    # 各オブジェクトの重心座標を横文字で表示
    cv2.putText(color_src02, "X: " +
                str(int(center[i][0])), (x1 - 30, y1 + 15), cv2.FONT_HERSHEY_PLAIN, 1, (0, 255, 255))
    cv2.putText(color_src02, "Y: " +
                str(int(center[i][1])), (x1 - 30, y1 + 30), cv2.FONT_HERSHEY_PLAIN, 1, (0, 255, 255))

    # 結果の表示
    cv2.imshow("color_src01", color_src01)
    cv2.imshow("color_src02", color_src02)

    cv2.waitKey(0)
    cv2.destroyAllWindows()
